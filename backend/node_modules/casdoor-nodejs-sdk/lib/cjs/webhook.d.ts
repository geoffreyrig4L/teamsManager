import { TableColumn } from './syncer';
import { AxiosResponse } from 'axios';
import { Config } from './config';
import Request from './request';
export interface Webhook {
    owner: string;
    name: string;
    createdTime: string;
    organization: string;
    type?: string;
    host?: string;
    port?: number;
    user?: string;
    password?: string;
    databaseType?: string;
    database?: string;
    table?: string;
    tablePrimaryKey?: string;
    tableColumns?: TableColumn[];
    affiliationTable?: string;
    avatarBaseUrl?: string;
    errorText?: string;
    syncInterval?: number;
    isReadOnly?: boolean;
    isEnabled?: boolean;
}
export declare class WebhookSDK {
    private config;
    private readonly request;
    constructor(config: Config, request: Request);
    getWebhooks(): Promise<AxiosResponse<{
        data: Webhook[];
    }>>;
    getWebhook(id: string): Promise<AxiosResponse<{
        data: Webhook;
    }>>;
    modifyWebhook(method: string, webhook: Webhook): Promise<AxiosResponse<Record<string, unknown>>>;
    addWebhook(webhook: Webhook): Promise<AxiosResponse<Record<string, unknown>>>;
    updateWebhook(webhook: Webhook): Promise<AxiosResponse<Record<string, unknown>>>;
    deleteWebhook(webhook: Webhook): Promise<AxiosResponse<Record<string, unknown>>>;
}
